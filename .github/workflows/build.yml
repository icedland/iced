name: GitHub CI
on:
  push:
    paths:
      - ".github/workflows/build.yml"
      - "build/**"
      - "src/**"
      - "!**/*.md"
    branches:
      - master
  pull_request:
    paths:
      - ".github/workflows/build.yml"
      - "build/**"
      - "src/**"
      - "!**/*.md"
    branches:
      - master

# Keep this in sync with the other *.yml files
env:
  CI_REQ_DOTNET_SDK_VER: '7.0.x'
  CI_NODE_MIN_VER: 'latest'
  RUSTFLAGS: '-D warnings'
  MACOSX_DEPLOYMENT_TARGET: '10.12'
  JAVA_DISTRIBUTION: 'temurin'
  JAVA_VERSION: '8'

jobs:

  #############################################################################
  #############################################################################
  #############################################################################

  build-rust-python-linux-x64:
    name: Python (${{matrix.os}}) x64
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        shell: bash
        run: bash build/ci-install-rust.sh

      - uses: actions/setup-python@v4
        with:
          python-version: '3.7'
      - name: Install Python tools
        shell: bash
        run: |
          python --version 2>&1 | grep 'Python 3\.7'
          python -m pip install -r src/rust/iced-x86-py/requirements-dev.txt

      - name: Build and test
        shell: bash
        run: |
          ./build/build-python --no-set-rustflags --python python
          git clean -xdf

      - name: Create the sdist
        shell: bash
        run: |
          git reset .
          git checkout .
          git clean -xdf
          ./build/build-python --sdist-only
          mkdir -p /tmp/py-dist
          cp src/rust/iced-x86-py/dist/* /tmp/py-dist
          git clean -xdf

      - name: Build manylinux x86_64
        shell: bash
        run: |
          git clean -xdf
          ./build/py-build-wheels-linux.sh "quay.io/pypa/manylinux2014_x86_64" --pypy

      - uses: actions/upload-artifact@v3
        with:
          name: py-dist-${{matrix.os}}-x64
          path: /tmp/py-dist
          if-no-files-found: error

  #############################################################################
  #############################################################################
  #############################################################################

  build-rust-python-linux-x86:
    name: Python (${{matrix.os}}) x86
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Build manylinux i686
        shell: bash
        run: |
          git clean -xdf
          ./build/py-build-wheels-linux.sh "quay.io/pypa/manylinux2014_i686"

      - uses: actions/upload-artifact@v3
        with:
          name: py-dist-${{matrix.os}}-x86
          path: /tmp/py-dist
          if-no-files-found: error

  #############################################################################
  #############################################################################
  #############################################################################

  upload-files:
    runs-on: ubuntu-latest
    name: Upload files
    needs:
      - build-dotnet
      - build-java
      - build-rust
      - build-rust-js-wasm
      - build-rust-python-linux-aarch64
      - build-rust-python-linux-x64
      - build-rust-python-linux-x86
      - build-rust-python-musllinux-x64
      - build-rust-python-macos-x64
      - build-rust-python-windows-x64
      - build-rust-python-windows-x86

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{env.CI_REQ_DOTNET_SDK_VER}}
      - uses: actions/setup-java@v3
        with:
          distribution: ${{env.JAVA_DISTRIBUTION}}
          java-version: ${{env.JAVA_VERSION}}
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - uses: actions/setup-node@v3
        with:
          node-version: ${{env.CI_NODE_MIN_VER}}
          registry-url: "https://registry.npmjs.org"

      - uses: actions/download-artifact@v3
        with:
          path: /tmp/artifacts

      - name: Upload checks
        shell: bash
        run: |
          python -m pip install -U twine
          python -m twine check /tmp/py-dist/*
          dotnet nuget push --help
          cargo publish --help
          npm publish --help
          mvn --help
