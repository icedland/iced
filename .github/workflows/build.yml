name: GitHub CI
on:
  push:
    paths:
      - ".github/workflows/build.yml"
      - "build/**"
      - "src/**"
      - "!**/*.md"
    branches:
      - master
  pull_request:
    paths:
      - ".github/workflows/build.yml"
      - "build/**"
      - "src/**"
      - "!**/*.md"
    branches:
      - master

env:
  JAVA_DISTRIBUTION: 'temurin'
  JAVA_VERSION: '8'

jobs:

  #############################################################################
  #############################################################################
  #############################################################################

  build-java:
    name: Java (${{matrix.os}})
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: ${{env.JAVA_DISTRIBUTION}}
          java-version: ${{env.JAVA_VERSION}}

      - name: Build and test
        shell: bash
        run: |
          extra_args=
          if [[ "$OSTYPE" != "linux-gnu"* ]]; then
            extra_args=--quick-check
          fi
          ./build/build-java $extra_args

  #############################################################################
  #############################################################################
  #############################################################################

  upload-files:
    runs-on: ubuntu-latest
    name: Upload files
    needs:
      - build-java

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: ${{env.JAVA_DISTRIBUTION}}
          java-version: ${{env.JAVA_VERSION}}

      - name: Set up Apache Maven Central
        uses: actions/setup-java@v3
        with:
          distribution: ${{env.JAVA_DISTRIBUTION}}
          java-version: ${{env.JAVA_VERSION}}
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_CENTRAL_TOKEN
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Publish to Apache Maven Central
        run: |
          cd src/java/iced-x86
          mvn deploy
        env:
          MAVEN_USERNAME: wtfsck
          MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
