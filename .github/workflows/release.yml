# This is triggered when a new release is created (using the GitHub UI)
name: New Release
on:
  push:
    paths:
      - ".github/workflows/build.yml"
      - "build/**"
      - "src/**"
      - "!**/*.md"
    branches:
      - master
  pull_request:
    paths:
      - ".github/workflows/build.yml"
      - "build/**"
      - "src/**"
      - "!**/*.md"
    branches:
      - master

# Keep this in sync with the other *.yml files
env:
  CI_REQ_DOTNET_SDK_VER: '7.0.x'
  CI_NODE_MIN_VER: 'latest'
  RUSTFLAGS: '-D warnings'
  MACOSX_DEPLOYMENT_TARGET: '10.12'
  JAVA_DISTRIBUTION: 'temurin'
  JAVA_VERSION: '8'

jobs:

  #############################################################################
  #############################################################################
  #############################################################################

  # If the supported Python versions get updated (added/removed), do:
  # - Update .github/workflows/*.yml
  #     - Search for 3.7, 3\.7, 37, py37
  # - Update build/ci-py-build-wheels.sh (update cp37)
  # - Update src/rust/iced-x86-py/Cargo.toml (update "abi3-py37" to min supported version)
  # - Update src/rust/iced-x86-py/README.md (py min ver: 'Python >= 3.7')
  # - Update src/rust/iced-x86-py/build-wheels.sh (search for eg. 37)
  # - Update src/rust/iced-x86-py/setup.py (Python versions)
  # - Update src/rust/iced-x86-py/tox.ini

  build-rust-python-linux-aarch64:
    name: Python (${{matrix.os}}) aarch64
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-20.04]

    steps:
      - uses: actions/checkout@v3

      - name: Ubuntu version
        shell: bash
        run: |
          cat /etc/lsb-release

      - name: Build manylinux aarch64
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install qemu-user-static
          git clean -xdf
          echo "getting latest image"
          sudo docker pull quay.io/pypa/manylinux2014_aarch64:latest
          echo "docker images"
          sudo docker image list
          sudo ./build/py-build-wheels-linux.sh "quay.io/pypa/manylinux2014_aarch64"

      - uses: actions/upload-artifact@v3
        with:
          name: py-dist-${{matrix.os}}-aarch64
          path: /tmp/py-dist
          if-no-files-found: error

  #############################################################################
  #############################################################################
  #############################################################################

  upload-files:
    runs-on: ubuntu-latest
    name: Upload files
    needs:
      - build-rust-python-linux-aarch64

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{env.CI_REQ_DOTNET_SDK_VER}}
      - uses: actions/setup-java@v3
        with:
          distribution: ${{env.JAVA_DISTRIBUTION}}
          java-version: ${{env.JAVA_VERSION}}
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - uses: actions/setup-node@v3
        with:
          node-version: ${{env.CI_NODE_MIN_VER}}
          registry-url: "https://registry.npmjs.org"

      - name: Upload checks
        shell: bash
        run: |
          python -m pip install -U twine
          python -m twine check /tmp/py-dist/*
          dotnet nuget push --help
          cargo publish --help
          npm publish --help
          mvn --help
